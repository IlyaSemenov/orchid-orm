name: tests
on:
  push:
    branches:
    - '*'
    - '!badges'
  pull_request:
    types: [opened, synchronize]
env:
  PG_URL: postgres://postgres:password@localhost:5432/orchid-orm
  MYSQL_URL: mysql://root:password@localhost:3306/mysql
jobs:
  test:
    runs-on: ubuntu-latest

    outputs:
      coverage: ${{ steps.coverage.outputs.COVERAGE }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Create database
        working-directory: packages/rake-db
        run: pnpm run db create

      - name: Run migrations
        working-directory: packages/rake-db
        run: pnpm run db migrate

      - name: Run tests
        run: pnpm test:ci

      - name: Get total coverage
        id: coverage
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "COVERAGE=$(./node_modules/.bin/ts-node scripts/getTestCoverageTotal.ts)" >> $GITHUB_OUTPUT

  badge:
    name: Generate badge image with test coverage value
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: badges

      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'test coverage'
          status: ${{ needs.test.outputs.COVERAGE }}
          color: 'green'
          path: coverage-badge.svg

      - name: Upload badge as artifact
        uses: actions/upload-artifact@v2
        with:
          name: badge
          path: coverage-badge.svg

      - name: Commit badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage-badge.svg
          
          # Will give error if badge did not changed
          git commit -m "Update coverage badge" || true

      - name: Push badge commit
        uses: ad-m/github-push-action@master
        if: ${{ success() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: badges
